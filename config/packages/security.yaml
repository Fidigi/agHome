security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_provider:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/(graphql|api)/
            anonymous: true
            guard:
                authenticators:
                    - App\Security\ApiTokenAuthenticator
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            user_checker: App\Security\UserChecker

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            logout:
                path: security_logout
                target: app_home
            access_denied_handler: App\Security\Handler\AccessDeniedHandler

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #- { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/back, roles: ROLE_MOD }
        #- { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_MOD: ROLE_USER
        ROLE_ADMIN: ROLE_MOD
